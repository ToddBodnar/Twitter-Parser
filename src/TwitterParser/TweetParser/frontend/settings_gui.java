/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package TwitterParser.TweetParser.frontend;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import TwitterParser.TweetParser.settings;
import TwitterParser.helpers.input_type;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.util.Properties;
import javax.swing.JFrame;
/**
 *
 * @author toddbodnar
 */
public class settings_gui extends JFrame{
        /**
     * Creates new form settings
     */
    public settings_gui() {
        initComponents();
        
//        jTextField1.setText(settings.number);
//        jTextField2.setText(settings.updatetime+"");
//        jCheckBox1.setSelected(settings.update);
//        jCheckBox2.setSelected(settings.finish);
//        
//        jCheckBox1.setEnabled(false);
//        jCheckBox2.setEnabled(false);
        
        dataDirectoryText.setText(settings.data_location);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jfc = new JFileChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jTextField2 = new javax.swing.JTextField();
        jCheckBox2 = new javax.swing.JCheckBox();
        applyButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        smtpField = new javax.swing.JTextField();
        emailField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        dataDirectoryButton = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        dataDirectoryText = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Text Settings");

        jLabel1.setText("Required");

        jLabel2.setText("Time Between Updates");

        jLabel3.setText("Send Updates?");

        
        
        jLabel4.setText("Send End Message");
        
     

        jTextField1.setText("15555550125");

        jTextField2.setText("120");
        /*jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        jTextField2.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                jTextField2InputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
        });*/

        applyButton.setText("Apply");
        applyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel5.setText("smtp");

        emailField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailFieldActionPerformed(evt);
            }
        });

        jLabel6.setText("Email");

        dataDirectoryButton.setText("Set Data Directory");
        dataDirectoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataDirectoryButtonActionPerformed(evt);
            }
        });

        jButton3.setText("Set Mini Directory");
        jButton3.setEnabled(false);

        dataDirectoryText.setText("Your data directory ");

        jLabel8.setText("Your mini data directory");

        jLabel10.setText("Required");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(applyButton)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(dataDirectoryText))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(dataDirectoryButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)))
                .addGap(0, 179, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dataDirectoryButton)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dataDirectoryText)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(applyButton)
                .addContainerGap())
        );


        pack();
    }// </editor-fold>                        

    private void jTextField2InputMethodTextChanged(java.awt.event.InputMethodEvent evt) {                                                   
    
    }                                                  

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {                                            
       
    }                                           

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        settings.number = jTextField1.getText();
        
        settings.update = jCheckBox1.isSelected();
        settings.finish = jCheckBox2.isSelected();
        
        settings.updatetime = Integer.parseInt(jTextField2.getText());
        
        //System.out.println(number+","+updatetime+","+update+","+finish);
    }                                        

    private void emailFieldActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }                                          

    private void dataDirectoryButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                    
        int mode = jfc.getFileSelectionMode();
        jfc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        jfc.showOpenDialog(this);
        jfc.setSelectedFile(null);
        jfc.setFileSelectionMode(mode);
      //  if(jfc.)
        {
            settings.data_location = jfc.getCurrentDirectory().toString();
            try {
                save();
            } catch (IOException ex) {
                Logger.getLogger(settings_gui.class.getName()).log(Level.SEVERE, null, ex);
            }
            dataDirectoryText.setText(settings.data_location);
        }
    }                                                   

    
    
    
    /**
     * Saves the settings at ./settings
     * @throws IOException 
     */
    public static void save() throws IOException {
        
        
        Properties prop = new Properties();
        
        /*prop.setProperty("updatetime", settings.updatetime+"");
        prop.setProperty("phone_number", settings.number);
        prop.setProperty("phone_update_rate", settings.update+"");
        prop.setProperty("phone_finish_update", Boolean.toString(settings.finish));
        
        prop.setProperty("email_addr", settings.email);
        prop.setProperty("smpt_addr", settings.smpt);
        */
        prop.setProperty("data_location", settings.data_location);
        prop.setProperty("data_type", settings.data_type.toString());
        
        
            
        
        prop.store(new FileOutputStream("settings"), null);
        
            
            
        
    }
    
    /**
     * Loads the settings from ./settings
     * @throws FileNotFoundException
     * @throws IOException 
     */
    public static void load() throws IOException{
        Properties prop = new Properties();
            
            prop.load(new FileInputStream("settings"));
            /*
            settings.updatetime = Integer.parseInt(prop.getProperty("updatetime"));
            settings.number = prop.getProperty("phone_number");
            settings.update = Boolean.parseBoolean(prop.getProperty("phone_update_rate"));
            settings.finish = Boolean.parseBoolean(prop.getProperty("phone_finish_update"));
            
            settings.email = prop.getProperty("email_addr");
            settings.smpt = prop.getProperty("smpt_addr");
            */
            settings.data_location = prop.getProperty("data_location");
            
            settings.data_type = input_type.valueOf(prop.getProperty("data_type"));
        
        
    }
    
    
    
    
    
    private JFileChooser jfc;
      // Variables declaration - do not modify                     
    private javax.swing.JButton dataDirectoryButton;
    private javax.swing.JLabel dataDirectoryText;
    private javax.swing.JTextField emailField;
    private javax.swing.JButton applyButton;
    private javax.swing.JButton jButton3;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField smtpField;
    // End of variables declaration      
    
}
